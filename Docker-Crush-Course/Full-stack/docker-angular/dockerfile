# Stage 1: Build the Angular app
FROM node:22-alpine AS builder

# Set the working directory inside the container
WORKDIR /docker-angular

# Copy package.json and package-lock.json (or npm-shrinkwrap.json)
# This is a separate step to leverage Docker cache
COPY package*.json ./

# Install all dependencies (including devDependencies)
RUN npm ci

# Copy the rest of the application source code
COPY . .

# Build the Angular app for production
# The output will be in `/app/dist/docker-angular/` (or your project name)
RUN npm run build

# Stage 2: Serve the app with a lightweight web server
FROM nginx:alpine

# Optional: Remove the default Nginx welcome page
RUN rm -rf /usr/share/nginx/html/*

# Copy custom nginx config (for SPA routing)
COPY nginx.conf /etc/nginx/nginx.conf

# Copy the built Angular app from the previous stage to the Nginx web root
COPY --from=builder /docker-angular/dist/docker-angular/browser /usr/share/nginx/html

# Expose port 80 (Nginx's default port)
EXPOSE 80

# Command to start Nginx when the container runs
CMD [ "nginx", "-g", "daemon off;" ]
